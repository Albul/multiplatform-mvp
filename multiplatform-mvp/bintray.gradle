apply plugin: 'com.jfrog.bintray'

group = publishedGroupId
version = libraryVersion

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def bintrayUser = properties.getProperty("bintray.user")
def bintrayApiKey = properties.getProperty("bintray.apikey")
def bintrayPassword = properties.getProperty("bintray.gpg.password")

afterEvaluate {
    project.publishing.publications.all {
        // Rename artifacts
        groupId = publishedGroupId
        if (it.name.contains('metadata')) {
            artifactId = "$artifact"
        } else {
            artifactId = "$artifact-$name"
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayApiKey

    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = developerOrg
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true
                passphrase = bintrayPassword
            }
        }
    }
}

// This specifies the publications to upload to bintray before doing the bintrayUpload gradle task.
// In the mpp configuration of one module after 1.3,
// it is not uploaded unless you explicitly specify artifacts in publications like this.
// It is not necessary to have the findAll part,
// [project name]-kotlinMultiplatformbut a directory containing only pom files will be uploaded, so it is better to exclude it.
bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "kotlinMultiplatform"
    }
}

// The task of bintrayUpload depends on publishToMavenLocal set in the previous section.
// This will create maven artifacts when running bintrayUplaod's task.
bintrayUpload.dependsOn publishToMavenLocal